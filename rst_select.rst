如何随时随手写出优美的文档？
=============================

标记语言
-------------
  
  标记语言，是一种将文本以及文本相关的其他信息结合起来，
  展现出关于文档结构和数据处理细节的电脑文字编码。
  与文本相关的其他信息（包括文本的结构和表示信息等）与原来的文本结合在一起，
  但是使用标记进行标识。

  没有标记语言就没有Web和丰富多彩的互联网，但创造了Web的HTML语言并非尽善尽美，
  存在诸如难读、难写、难以向其他格式转换的问题。究其根源是因为HTML语言是一种“重”标记语言，
  对机器友好而并非对人友好。

示范样例
--------

**这段文字，用HTML和轻量级标记语言，一个复杂，一个简洁，对比如下：**

----

轻量级标记语言
::::::::::::::

**轻量级标记语言** 是一种 *语法简单* 的标记语言。
它使用易于理解的格式标记，没有古怪的 `<标签>` 。

- 可以使用最简单的文本编辑器编辑。
- 所见即所得，非技术控亦可直接阅读源码。
- 可版本控制。
- 实现单一源文件出版。

----

**下面是这段文字的HTML源码，非技术控阅读起来会遇到困难。**

-----

::

 <html>
 <head>
   <meta content='application/xhtml+xml;charset=utf-8' http-equiv='Content-type' />
   <title>轻量级标记语言</title>
 </head>
 <body>
   <h1 id='id1'>轻量级标记语言</h1>

   <p><strong>轻量级标记语言</strong> 是一种 <em>语法简单</em> 的标记语言。
   它使用易于理解的格式标记，没有古怪的 <code>&lt;标签&gt;</code> 。</p>

   <ul>
   <li>可以使用最简单的文本编辑器编辑。</li>
   <li>所见即所得，非技术控亦可直接阅读源码。</li>
   <li>可版本控制。</li>
   <li>实现单一源文件出版。</li>
   </ul>
 <body>
 </html>

-----

**同样的信息如果换用轻量标记语言来表达，就非常直观了。**

-----

::

 轻量级标记语言
 -------------

 **轻量级标记语言** 是一种 *语法简单* 的标记语言。
 它使用易于理解的格式标记，没有古怪的 `<标签>` 。

 - 可以使用最简单的文本编辑器编辑。
 - 所见即所得，非技术控亦可直接阅读源码。
 - 可版本控制。
 - 实现单一源文件出版。


轻量标记语言
------------

   轻量标记语言(en:Lightweightmarkuplanguage)，
   是一类用简单句法描述简单格式的文本语言。 
   
   所谓‘轻量’是相对于其他更丰富格式的标记语言而言的，
   比如：富文本格式语言RTF，超文本标记语言HTML，学术界排版语言Tex等。

轻量级标记语言是一种时髦的系统语言,它用不同的方式标注文档,并且设计了简单易读的语法。
事实上,它的语法非常之简单以至于任何人都能快速的掌握这些标记语言。
这类语言最大的优点在于,用户使用一个普通的文本编辑器就可以在源文档中方便的输入注释文本。

这类语言使用简单的格式以及几个简单的特殊字符或字符串来标记段落标题、列表、表格、引用、字体等内容。 

轻量级标记语言有许多用处。我们的生活被电子邮件、便笺、文章、报道以及推特包围着。
许多人会先写好文本,然后重新排列、重新使用这些文本。
轻量级标记语言在这方面非常有用,节约了大量手工敲打html标记的时间,加快了文字处理的速度。
当读者想要阅读源文件和已输出文档时,他们也具有很强大的可读性。

此外,他们也被频繁的使用于基于网络的出版物中,包括维基和博客等。 
通过使用这些开源的工具,用户能够在很短的时间里做出高质量的注释文本,这不需要任何成本。
代码完全是可移植的,并且可以输出成各种格式的文档。 

GitHub令人着迷的一个因素就在于GitHub为用户提供更为便捷地创建UGC（用户生成内容）的方法，
其奥秘就在于使用了轻量级标记语言。
无论是代码提交说明、提交评注、问题描述、项目的README文件、维基页面、用户主页和项目主页
都可以使用Markdown[8]等轻量级标记语言来撰写。
轻量级标记语言如Markdown是对人友好的标记语言，一些语法参照了我们写电子邮件时的习惯，
即使第一次接触用轻量级标记语言撰写的文件，也可以毫无障碍地理解其中的内容。

虽然GitHub更倾向于使用Markdown标记语言[9]，但很多地方也提供对其他轻量级标记语言的支持。
包括为Python程序员所熟悉的reStructedText[10]，
为Ruby程序员所熟悉的Textile[11]、RDoc[12]，为Perl程序员所熟悉的POD[13]，
为Emacs用户所熟悉的Org-mode[14]，为维基用户所熟悉的MediaWiki[15]和Creole[16]，
以及可作为DocBook[17]前端的颇有前途的AsciiDoc[18]标记语言。

现在,让我们来看看7个最常用的轻量级标记语言。
下面每一个语言的标题都带有指向他自己首页的链接,里面有详细的描述,
包括它本身语言特点的深度分析,以及一些相关资源的链接和评论。 

Markdown --标记语言以及文本到HTML的转换工具 

MultiMarkdown --基于Markdown但具有更多功能 

AsciiDoc --漂亮的文本文档格式用于写作 

Textile --被称为“人类网络文本生成器” 

Texy --文本到XHTML格式化和转化库 

Tome --作者的标记语言和工具包 

reStructuredText --Docutils的标记语法分析组件 


常用轻量标记语言对照表
----------------------

  下面通过一张表格对几种常用的轻量级标记语言加以对照，供有不同标记语言偏好的用户参考，
  便于在GitHub某些不能随意更换标记语言而只能使用GFM（GitHub风格的Markdown）的场合可以自如地转换。
  
  在“常用轻量标记语言对照表”中，为使表格更加紧凑使用代号表示各种标记语言。
  例如：md为Markdown，gfm是GitHub风格的Markdown，rst为reStructedText，
  ttl为Textile，asc为AsciiDoc，org为Org-mode。

